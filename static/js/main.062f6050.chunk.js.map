{"version":3,"sources":["components/films.js","redux/store.js","redux/localStorageHelper.js","components/FilterForm.js","components/FilmItem.js","components/Header.js","components/FilmsList.js","components/App.js","index.js"],"names":["movies","id","title","releaseyear","format","stars","initState","JSON","parse","localStorage","getItem","store","createStore","state","action","type","films","uuidv1","newTitle","newStars","newReleaseYear","newFormat","filter","movie","filmId","filmsHidden","world","join","toLowerCase","includes","value","applyMiddleware","thunk","subscribe","stateToSave","getState","setItem","stringify","connect","dispatch","setSearch","setSearchProps","className","placeholder","onChange","someType","search","target","dispath","deleteFilm","actions","film","onClick","addFilms","setIsOpen","useState","setNewTitle","setNewStars","setNewReleaseYear","setNewFormat","handleChange","event","name","onSubmit","preventDefault","length","isOpen","map","key","App","React","Component","ReactDOM","render","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.062f6050.chunk.js","sourcesContent":["  \nconst movies = [\n  {\n    id: 1,\n    title: 'Blazing Saddles',\n    releaseyear: 1974,\n    format: 'VHS',\n    stars: 'Humphrey Bogart, Ingrid Bergman, Claude Rains, Peter Lorre',\n  },\n  {\n    id: 2,\n    title: 'Casablanca',\n    releaseyear: 1942,\n    format: 'DVD',\n    stars: 'Mel Brooks, Clevon Little, Harvey Korman, Gene Wilder, Slim Pickens, Madeline Kahn',\n  },\n  {\n    id: 3,\n    title: 'Cool Hand Luke',\n    releaseyear: 1967,\n    format: 'VHS',\n    stars: 'Paul Newman, George Kennedy, Strother Martin',\n  },\n  {\n    id: 4,\n    title: 'Butch Cassidy and the Sundance Kid',\n    releaseyear: 1969,\n    format: 'VHS',\n    stars: 'Paul Newman, Robert Redford, Katherine Ross',\n  },\n  {\n    id: 5,\n    title: 'The Sting',\n    releaseyear: 1973,\n    format: 'DVD',\n    stars: 'Robert Redford, Paul Newman, Robert Shaw, Charles Durning',\n  },\n];\n\nexport default movies;","import thunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport movies from '../components/films';\nimport uuidv1 from 'uuid/v1';\nimport { saveState, loadState } from './localStorageHelper';\n\n// Загрузка из LocaleStorage\nconst initState = loadState(movies);\n\n// action\nconst ADD_FILMS = 'ADD_FILMS';\nconst DELETE_FILM = 'DELETE_FILM';\nconst SET_SEARCH = 'SET_SEARCH';\n// const LOCALSTORAGE__GETITEM = 'LOCALSTORAGE__GETITEM';\n// const LOCALSTORAGE__SETITEM = 'LOCALSTORAGE__SETITEM';\n\n// selection\nexport const addFilms = \n  (newTitle, newStars, newReleaseYear, newFormat) => ({ \n    type: ADD_FILMS, newTitle, newStars, newReleaseYear, newFormat \n  })\nexport const delete_movie = filmId => ({ type: DELETE_FILM, filmId });\nexport const setSearchProps = value => ({ type: SET_SEARCH, value });\n// export const localStorageGetItem = () => ({ type: LOCALSTORAGE__GETITEM });\n// export const localStorageSetItem = () => ({ type: LOCALSTORAGE__SETITEM })\n\nconst rootReducer = (state = initState || movies, action) => {\n  switch (action.type) {\n    case ADD_FILMS: \n      return { ...state,\n          films: [...state.films, {\n            id: uuidv1,\n            title: action.newTitle,\n            stars: action.newStars,\n            releaseyear: action.newReleaseYear,\n            format: action.newFormat,\n          }]\n        }\n\n    case DELETE_FILM:\n      return {...state,\n          films: state.films.filter(movie => movie.id !== action.filmId)\n        }\n      case SET_SEARCH:\n        return {\n          ...state,\n          films: state.filmsHidden.filter(\n            world => [world.title, world.stars]\n              .join('')\n              .toLowerCase()\n              .includes(action.value.toLowerCase())\n          )\n        }\n  \n    default: \n      return state;\n  }\n};\n\n// const initialState = {\n//   films: movies,\n//   filmsHidden: movies,\n//   searchText: '',\n//   searchProps: 'title',\n// };\n\nconst store = createStore(\n  rootReducer,\n  // initialState,\n    applyMiddleware(thunk),\n);\n\n// Сохранение в LocaleStorage\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;","export const saveState = (stateToSave) => {\n  localStorage.setItem('films', JSON.stringify(stateToSave));\n};\n\nexport const loadState = () => {\n  return JSON.parse(localStorage.getItem('films'));\n};","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchProps } from './../redux/store';\n\nconst FilterForm = ({ setSearch }) => {\n  const handleSearch = (someType) => {\n    const search = someType.target.value;\n    setSearch(search);\n  }\n  return (\n      <input\n        type=\"text\"\n        className=\"search_input\"\n        placeholder=\"Search for\"\n        onChange={handleSearch}\n      />\n  );\n};\n\nconst getMethods = dispatch => ({\n  setSearch: value => dispatch(setSearchProps(value)),\n});\n\nexport default connect(\n  null,\n  getMethods,\n)(FilterForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from './../redux/store';\n\nconst FilmItem = ({ film, deleteFilm }) => {\n  const handleDelete = (filmId) => {\n    deleteFilm(filmId);\n  }\n\n  return (\n    <li>\n      <div className=\"box-inform\">\n        <h1>{film.title}</h1>\n        <div className=\"divider\" />\n        <p>{film.releaseyear}</p>\n        <p>{film.format}</p>\n        <p>{film.stars}</p>\n        <button\n          onClick={() => handleDelete(film.id)}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n   </li>\n  )\n}\n\nconst mapActions = dispath => ({\n  deleteFilm: filmId => dispath(actions.delete_movie(filmId)),\n});\n\nexport default connect(null, mapActions)(FilmItem);\n\n\nFilmItem.propTypes = {\n  film: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    stars: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  deleteFilm: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from './../redux/store';\n\nconst Header = ({ addFilms, setIsOpen }) => {\n  const [ newTitle, setNewTitle ] = useState('');\n  const [ newStars, setNewStars ] = useState('');\n  const [ newReleaseYear, setNewReleaseYear ] = useState('');\n  const [ newFormat, setNewFormat ] = useState('');\n\n  const hanleSubmit = (event) => {\n    event.preventDefault();\n    if (newTitle.length > 1 && newStars.length > 1 && newReleaseYear.length > 1 ) {\n      addFilms(newTitle, newStars, newReleaseYear, newFormat);\n      setNewTitle('');\n      setNewStars('');\n      setNewReleaseYear('');\n      setNewFormat('');\n    }\n      \n  }\n\n  const handleClose = () => {\n    setIsOpen(false); \n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"newTitle\") {\n      setNewTitle(value);\n    } if (name === \"newStars\") {\n      setNewStars(value);\n    } if (name === \"newReleaseYear\") {\n      setNewReleaseYear(value)\n    } if (name === \"newFormat\") {\n      setNewFormat(value)\n    }\n  }\n    return (\n      <div className=\"box\">\n        <form \n          onSubmit={hanleSubmit} \n          className=\"add__new__films\"\n        >\n          <p className=\"films-list\">\n            enter title\n            <input\n              type=\"text\"\n              value={newTitle}\n              placeholder=\"What needs title?\"\n              name=\"newTitle\"\n              onChange={handleChange}\n          />\n          </p>\n          <p>enter stars:\n          <input\n            type=\"text\"\n            value={newStars}\n            placeholder=\"What stars?\"\n            name=\"newStars\"\n            onChange={handleChange}\n          />\n          </p>\n          <p>enter yers:\n          <input\n            type=\"text\"\n            value={newReleaseYear}\n            placeholder=\"What releas eyear?\"\n            name=\"newReleaseYear\"\n            onChange={handleChange}\n          />\n          </p>\n          <p> enter format:\n            <select className=\"add__new__films_select\" onChange={handleChange}  name=\"newFormat\" value={newFormat}>\n              <option>DVD</option>\n              <option>VHS</option>\n              <option>Blue-Ray</option>\n            </select>\n          </p>\n          \n          <button\n            type=\"submit\"\n            className=\"buttonHide\"\n          >\n          submit\n          </button>\n          <button\n            type=\"submit\"\n            className=\"buttonClose\"\n            onClick={handleClose}\n          >\n          X\n          </button>\n        </form>\n      </div>\n    );\n}\n\nconst mapActions = dispatch => ({\n  addFilms: (newTitle, newStars, newReleaseYear, newFormat) => dispatch(actions.addFilms(newTitle, newStars, newReleaseYear, newFormat))\n})\n\nexport default connect(null, mapActions)(Header);\n\nHeader.propTypes = {\n  onSubmit: PropTypes.func,\n  handleClose: PropTypes.func,\n};","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FilterForm from './FilterForm';\n\nimport FilmItem from './FilmItem';\nimport Header from './Header';\n\nconst FilmsList = ({ films }) => {\n  const [ isOpen, setIsOpen ] = useState(false);\n  const handleAddFilm = () => {\n    setIsOpen(true); \n  }\n    return (\n      <section className=\"main\">\n        <div className=\"container\">\n          <FilterForm />\n          {\n            isOpen ? <Header setIsOpen={setIsOpen} /> : ''\n          }\n          <button type=\"button\" \n            onClick={handleAddFilm}\n          >\n            Add film\n          </button>\n        </div>\n        <ul className=\"films-list\">\n          {\n            films.map(film => (\n              <FilmItem\n                key={film.id}\n                film={film}\n              />\n            ))\n          }\n        </ul>\n      </section>\n    );\n  }\n\nconst mapState = (state) => ({\n    films: state.films,\n})\n\nexport default connect(mapState)(FilmsList);\n","import React from 'react';\n// import { connect } from 'react-redux';\n\nimport FilmsList from './FilmsList';\nimport './App.css';\n// import * as actionCreate from './../redux/store';\n\nclass App extends React.Component {\n  render() {\n    return (\n<section className=\"todoapp\">\n    <FilmsList /> \n  </section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport store from './redux/store';\n\n// import './base.css';\n// import './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Route path=\"/:filter?\" component={App} />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}